@using System.Linq
@using System.Collections.Generic
@{
    ViewData["Title"] = "Identify Mushroom";
}

<h2>Identify Mushroom</h2>

<form asp-action="Index" method="post" enctype="multipart/form-data">
    <div class="mb-3">
        <label for="image" class="form-label">Select mushroom photo:</label>
        <input type="file" name="image" id="image" class="form-control" accept="image/*" required />
    </div>
    <button type="submit" class="btn btn-sitecolumns">Zidentyfikuj</button>
</form>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger mt-3">@Model.ErrorMessage</div>
}

@if (Model.Success)
{
    <h4 class="mt-4">Wyniki identyfikacji:</h4>

    @if (Model.IsMushroom != null)
    {
        <div class="alert alert-sitecolumns mb-3"> @*<div class="alert @(Model.IsMushroom ? "alert-success" : "alert-warning") mb-3">*@
            <strong>Czy to grzyb?</strong> @(Model.IsMushroom ? "Tak" : "Nie")
            @if (Model.MushroomProbability > 0)
            {
                <text>(@($"{Model.MushroomProbability:P1}"))</text>
            }
        </div>
    }

    <div class="row">
        @foreach (var suggestion in Model.Suggestions)
        {
            <div class="col-md-6 mb-4">
                <div class="card card-sitecolumns">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <strong>@suggestion.Name</strong>
                            <span class="badge bg-primary float-end">@($"{suggestion.Probability:P0}")</span>
                        </h5>
                    </div>
                    <div class="card-body card-body-sitecolumns">
                        <div class="row">
                            <div class="@(suggestion.SimilarImages != null && suggestion.SimilarImages.Count > 0 ? "col-md-8" : "col-md-12")">
                                @if (suggestion.CommonNames != null && suggestion.CommonNames.Count > 0)
                                {
                                    <p class="card-text card-text-sitecolumns">
                                        <strong>Nazwy popularne:</strong> @string.Join(", ", suggestion.CommonNames)
                                    </p>
                                }

                                @if (!string.IsNullOrWhiteSpace(suggestion.Edibility))
                                {
                                    <p class="card-text card-text-sitecolumns">
                                        <strong>Jadalność:</strong>
                                        <span class="badge @GetEdibilityBadgeClass(suggestion.Edibility)">
                                            @GetEdibilityTranslation(suggestion.Edibility)
                                        </span>
                                    </p>
                                }

                                @if (suggestion.Psychoactive != null && suggestion.Psychoactive)
                                {
                                    <p class="card-text card-text-sitecolumns">
                                        <strong>Psychoaktywny:</strong>
                                        <span class="badge @(suggestion.Psychoactive ? "bg-danger" : "bg-success")">
                                            @(suggestion.Psychoactive ? "Tak" : "Nie")
                                        </span>
                                    </p>
                                }

                                @if (!string.IsNullOrWhiteSpace(suggestion.Url))
                                {
                                    <a href="@suggestion.Url" target="_blank" class="btn btn-outline-primary btn-sm">
                                        Więcej informacji
                                    </a>
                                }
                            </div>

                            @if (suggestion.SimilarImages != null && suggestion.SimilarImages.Count > 0)
                            {
                                var firstImage = suggestion.SimilarImages[0];
                                <div class="col-md-4">
                                    <div class="text-center">
                                        <img src="@(firstImage.UrlSmall ?? firstImage.Url)"
                                             alt="Podobne zdjęcie"
                                             class="img-fluid rounded"
                                             style="max-height: 150px; object-fit: cover;" />
                                        <small class="text-muted d-block mt-1">
                                            Podobieństwo: @($"{firstImage.Similarity:P0}")
                                        </small>
                                        @if (!string.IsNullOrWhiteSpace(firstImage.Citation))
                                        {
                                            <small class="text-muted d-block">
                                                Źródło: @firstImage.Citation
                                            </small>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@functions {
    string GetEdibilityBadgeClass(string edibility)
    {
        return edibility?.ToLower() switch
        {
            "choice" => "bg-success",
            "edible" => "bg-success",
            "inedible" => "bg-warning",
            "edible_but_not_recommended" => "bg-warning",
            "not_edible" => "bg-secondary",
            "psychoactive" => "bg-warning",
            "poisonous" => "bg-danger",
            "deadly" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetEdibilityTranslation(string edibility)
    {
        return edibility?.ToLower() switch
        {
            "choice" => "Wyborowy",
            "edible" => "Jadalny",
            "inedible" => "Niejadalny",
            "edible_but_not_recommended" => "Jadalny, ale niezalecany",
            "not_edible" => "Niejadalny",
            "psychoactive" => "Psychoaktywny",
            "poisonous" => "Trujący",
            "deadly" => "Śmiertelnie trujący",
            _ => edibility ?? "Nieznane"
        };
    }
}