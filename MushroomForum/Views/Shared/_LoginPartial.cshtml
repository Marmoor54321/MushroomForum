@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var greetings = new[] { "niezły z Ciebie fungi ;D", "pora na grzybobranie!", "dobrze, że jesteś <3", "wiesz co u Agatki?",
    "uważaj na czarcie kręgi!!!", "kanie zarezerwowane?", "co na słuchawkach? Kanie?", "uważaj na cordycepsy D:", 
    "wykręcasz, czy obcinasz?", "Żwirek kręci z Muchomorkiem!", "jedz grzyby będziesz wielki", "idziemy na grzyby?",
    "jesteś zagrzybisty :P", "tutaj żdnych nie ma...", "lepszy rydz niż nic ;)",
    "potrzebny Ci power-up?", "zaczyna się sezon", "gdzie jeden grzyb, tam i drugi", "im dalej w las, tym więcej grzybów",
    "nigdy nie zdradzaj swoich miejscówek"};
    var random = new Random();
    var selectedGreeting = greetings[random.Next(greetings.Length)];
}
<ul class="navbar-nav">

@if (SignInManager.IsSignedIn(User))
{
        var user = await UserManager.GetUserAsync(User);
        <span class="nav-greeting">
            Witaj, <strong>@user.UserName</strong>! @selectedGreeting
        </span>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link nav-button-green">Wyloguj się</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link nav-button-green" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>
    </li>
    <li class="nav-item">
        <a class="nav-link nav-button-green" asp-area="Identity" asp-page="/Account/Login">Zaloguj się</a>
    </li>
}
</ul>
