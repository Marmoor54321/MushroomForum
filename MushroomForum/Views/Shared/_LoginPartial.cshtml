@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var greetings = new[] { ", niezły z Ciebie fungi ;D", " teraz jest pora na grzybora!", ", dobrze, że jesteś <3" };
    var random = new Random();
    var selectedGreeting = greetings[random.Next(greetings.Length)];
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @User.Identity?.Name, @selectedGreeting
            </a>
        </li>

    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link nav-button-green">Wyloguj się</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link nav-button-green" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>
    </li>
    <li class="nav-item">
        <a class="nav-link nav-button-green" asp-area="Identity" asp-page="/Account/Login">Zaloguj się</a>
    </li>
}
</ul>
