@model MushroomForum.ViewModels.ThreadDetailsViewModel
@{
	ViewData["Title"] = Model.Thread.Title;
}

<div class="thread-details-container">
	<h1 class="forum-title">@Model.Thread.Title</h1>
	<div class="thread-info">
		<p><strong>Opis:</strong> @Model.Thread.Description</p>
		<p><strong>Autor:</strong> @(Model.Thread.User?.UserName ?? "Anonim")</p>
		<p><strong>Kategoria:</strong> @(Model.Thread.Category?.Name ?? "Brak kategorii")</p>
		<p><strong>Data utworzenia:</strong> @Model.Thread.CreatedAt.ToString("dd/MM/yyyy HH:mm")</p>
		<p>
			<strong>Polubienia wątku:</strong> @Model.ThreadLikeCount
		</p>
		@if (User.Identity.IsAuthenticated)
		{
			<form asp-action="Like" asp-controller="ForumThreads" method="post" style="display:inline;">
				<input type="hidden" name="threadId" value="@Model.Thread.ForumThreadId" />
				<button type="submit" class="button-green" @(Model.ThreadLikedByCurrentUser ? "disabled" : null)>Polub wątek</button>
			</form>
			<form asp-action="Unlike" asp-controller="ForumThreads" method="post" style="display:inline;">
				<input type="hidden" name="threadId" value="@Model.Thread.ForumThreadId" />
				<button type="submit" class="button-green" @(!Model.ThreadLikedByCurrentUser ? "disabled" : null)>Cofnij polubienie</button>
			</form>
		}
	</div>

	
		<div class="mb-3">
			@if (User.Identity.IsAuthenticated)
	{
			<a asp-controller="Posts" asp-action="Create" asp-route-forumThreadId="@Model.Thread.ForumThreadId" class="button-green">Dodaj nowy post</a>
	}
		<a asp-action="Index"
		   asp-controller="ForumThreads"
		   asp-route-pageNumber="@ViewBag.PageNumber"
		   asp-route-pageSize="@ViewBag.PageSize"
		   asp-route-sortOrder="@ViewBag.SortOrder"
		   asp-route-categoryId="@ViewBag.CategoryId"
		   asp-route-searchTerm="@ViewBag.SearchTerm"
		   class="button-green">
			Powrót do listy wątków
		</a>
		</div>
	

	@if (Model.Posts.Any())
	{
		<div class="post-list">
			@foreach (var post in Model.Posts)
			{
				<div class="post-item">
					<div class="post-content">
						<p>@post.Description</p>
						@if (post.Media.Any())
						{
							<div class="post-media">
								@foreach (var media in post.Media)
								{
									@if (media.Type == "image")
									{
										<img src="@media.Url" alt="Media" />
									}
									else if (media.Type == "video")
									{
										<video controls>
											<source src="@media.Url" type="video/mp4">
											Twoja przeglądarka nie obsługuje wideo.
										</video>
									}
								}
							</div>
						}
					</div>
					<div class="post-meta">
						<p class="text-wrap"><strong>Autor:</strong> @(post.User?.UserName ?? "Anonim")</p>
						<p class="text-wrap"><strong>Data:</strong> @post.CreatedAt.ToString("dd/MM/yyyy HH:mm")</p>
						<p class="text-wrap"><strong>Polubienia:</strong> @(Model.PostLikeCounts.TryGetValue(post.PostId, out var count) ? count : 0)</p>
						@if (User.Identity.IsAuthenticated)
						{
							<form asp-action="Reply" asp-controller="Posts" method="get" style="display:inline;">
								<input type="hidden" name="postId" value="@post.PostId" />
								<button type="submit" class="button-green">Odpowiedz</button>
							</form>
							<form asp-action="Like" asp-controller="Posts" method="post" style="display:inline;">
								<input type="hidden" name="postId" value="@post.PostId" />
								<button type="submit" class="button-green" @(Model.LikedPostIds.Contains(post.PostId) ? "disabled" : null)>Polub</button>
							</form>
							<form asp-action="Unlike" asp-controller="Posts" method="post" style="display:inline;">
								<input type="hidden" name="postId" value="@post.PostId" />
								<button type="submit" class="button-green" @(!Model.LikedPostIds.Contains(post.PostId) ? "disabled" : null)>Cofnij polubienie</button>
							</form>
						}
					</div>
					@if (post.Replies != null && post.Replies.Any())
					{
						<div class="post-replies" style="margin-left:2em;">
							@foreach (var reply in post.Replies)
							{
								<div class="post-item reply">
									<div class="post-content">
										<p class="text-wrap">@reply.Description</p>
									</div>
									<div class="post-meta">
										<p class="text-wrap"><strong>Autor:</strong> @(reply.User?.UserName ?? "Anonim")</p>
										<p class="text-wrap"><strong>Data:</strong> @reply.CreatedAt.ToString("dd/MM/yyyy HH:mm")</p>
									</div>
								</div>
							}
						</div>
					}

				</div>
			}
		</div>

		<nav aria-label="Paginacja postów">
			<ul class="pagination justify-content-center">
				<li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
					<a class="page-link" asp-action="Details" asp-route-id="@Model.Thread.ForumThreadId" asp-route-pageNumber="@(Model.PageNumber - 1)">Poprzednia</a>
				</li>
				@for (int i = 1; i <= Model.TotalPages; i++)
				{
					<li class="page-item @(i == Model.PageNumber ? "active" : "")">
						<a class="page-link" asp-action="Details" asp-route-id="@Model.Thread.ForumThreadId" asp-route-pageNumber="@i">@i</a>
					</li>
				}
				<li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
					<a class="page-link" asp-action="Details" asp-route-id="@Model.Thread.ForumThreadId" asp-route-pageNumber="@(Model.PageNumber + 1)">Następna</a>
				</li>
			</ul>
		</nav>
	}
	else
	{
		<p>Brak postów w tym wątku.</p>
	}
</div>